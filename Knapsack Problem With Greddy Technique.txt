kstype=input('Enter your Knapsack type p for max profit \n w for minimum wieght \n and pw for max profit/weghit: ')
maxw=input('Enter your bag maximum weight: ')
profits=[]
weights=[]

#Taking Profits & weigths inputs fomr the user and assign them to lists
for i in range (7):
    x=input('Enter your profit:')
    x=int(x)
    profits.append(x)
print("\nNow  Enter your weights respectively\n")    
for i in range (7):
    x=input('Enter your weights:')
    x=int(x)
    weights.append(x)    

#Creating a dict containig tuples of P & W    
objects={}
for i in range(1,8):
    objects[i]=[profits[i-1],weights[i-1]]

#converting dict to list to do the sorting
objectslist=list(objects.items())

#########First option using maximum profit approach
if kstype=='p':
    print('\nMax Profit approach \n')
    bag={}
    maxw=int(maxw)
    l=len(objectslist)
    
    #sorting according to profit descendingly
    for i in range(l-1):
        for j in range(i+1,l):
            if objectslist[i][1][0]<objectslist[j][1][0]:
                t=objectslist[i]
                objectslist[i]=objectslist[j]
                objectslist[j]=t
    print(f"whole bag is:{objectslist}")                    
    total_w=0
    rem=maxw
    total_prof=0
    
    #applying the greedy technique of collecting maximum profit
    for i in range(l):
        w=objectslist[i][1][1]
        if w<=rem:
            bag[objectslist[i][0]]=objectslist[i][1]
            rem=rem-w
            total_w+=w
            total_prof+=objectslist[i][1][0]

        elif rem!=0:
            y=(objectslist[i][1][0])*(rem/w)
            w=(w*rem)/w
            x=float(w*(rem/w))
            bag[i]=[y,x]
            total_w+=w 
            rem=rem-w
            total_prof+=y
    print(f"new bag is:{bag}")
    print(f"total weight is:{total_w}")
    print(f"total profit is:{total_prof}")

#########Second option using mainimum weight approach
if kstype=='w':
    print('\nMin Weight approach \n')
    bag={}
    maxw=int(maxw)
    l=len(objectslist)
    
    #sorting according to weight ascendingly
    for i in range(l-1):
        for j in range(i+1,l):
            if objectslist[i][1][1]>objectslist[j][1][1]:
                    t=objectslist[i]
                    objectslist[i]=objectslist[j]
                    objectslist[j]=t
                    
    #sorting again to put any identical weights with larger profits before its twin with a lower profit value               
    for i in range(l-1):
        for j in range(i+1,l):
            if objectslist[i][1][0]<objectslist[j][1][0] and objectslist[i][1][1]==objectslist[j][1][1]:
                    t=objectslist[i]
                    objectslist[i]=objectslist[j]
                    objectslist[j]=t      
    print(f"whole bag is:{objectslist}")
    total_w=0
    rem=maxw
    total_prof=0
    
    #applying the greedy technique of collecting minimum weight
    for i in range(l):
        w=objectslist[i][1][1]
        if w<=rem:
            bag[objectslist[i][0]]=objectslist[i][1]
            rem=rem-w
            total_w+=w
            total_prof+=objectslist[i][1][0]

        elif rem!=0:
            y=(objectslist[i][1][0])*(rem/w)
            w=(w*rem)/w
            x=float(w*(rem/w))
            bag[i]=[y,x]
            total_w+=w 
            rem=rem-w
            total_prof+=y
    print(f"new bag is:{bag}")
    print(f"total weight is:{total_w}")
    print(f"total profit is:{total_prof}") 
    
    
#################Third option using maximum profit per wieght ratio
if kstype=='pw':
    print('\nMax Profit per Weight approach \n')
    bag={}
    maxw=int(maxw)
    l=len(objectslist)
    
    #sorting according to profit per wieght ratio descendingly
    for i in range(l-1):
        for j in range(i+1,l):
            if (objectslist[i][1][0])/(objectslist[i][1][1])<(objectslist[j][1][0])/(objectslist[j][1][1]):
                t=objectslist[i]
                objectslist[i]=objectslist[j]
                objectslist[j]=t 
                print('ratios are:\n')
    print(f"whole bag is:{objectslist}")
    total_w=0
    rem=maxw
    total_prof=0
    
    #applying the greedy technique of collecting maximum profit per wieght ratio
    for i in range(l):
        w=objectslist[i][1][1]
        if w<=rem:
            bag[objectslist[i][0]]=objectslist[i][1]
            rem=rem-w
            total_w+=w
            total_prof+=objectslist[i][1][0]

        elif rem!=0:
            y=(objectslist[i][1][0])*(rem/w)
            w=(w*rem)/w
            x=float(w*(rem/w))
            bag[i]=[y,x]
            total_w+=w 
            rem=rem-w
            total_prof+=y
    print(f"new bag is:{bag}")
    print(f"total weight is:{total_w}")
    print(f"total profit is:{total_prof}")            
                

